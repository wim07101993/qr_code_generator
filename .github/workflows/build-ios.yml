name: Build ios

on:
  workflow_call:
  workflow_dispatch:

jobs:
  getVersion:
    name: get version
    runs-on: ubuntu-latest
    outputs:
      fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}
      majorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
  
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        
  buildIos:
    name: build iOS üçè
    runs-on: macos-latest
    needs: getVersion
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Install flutter
        uses: subosito/flutter-action@v2.10.0
      
      - name: Import certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.APPSTORE_CERT }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.APPLE_PROVISIONING_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          echo create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
          echo import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          echo create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          echo import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          echo apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          
      - run: flutter doctor -v
      - run: flutter pub get
      
      - name: Build ipa
        run: flutter build ipa --release --build-name ${{ needs.getVersion.outputs.majorMinorPatch }} --build-number ${{ github.run_number }} --export-options-plist=ios/Runner/ExportOptions.plist

      - name: Stage artifact file
        run: mv build/ios/ipa/*.ipa  ${{ vars.IOS_ARTIFACT_PATH }}
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ vars.IOS_ARTIFACT }}
          path:  ${{ vars.IOS_ARTIFACT_PATH }}
          if-no-files-found: error
          
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision

       
  uploadToTestFlight:
    name: upload to TestFlight
    runs-on: macos-latest
    needs: buildIos
    if: false
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: ${{ vars.IOS_ARTIFACT }}

      - name: Upload to TestFlight
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: qr_code_generator.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
