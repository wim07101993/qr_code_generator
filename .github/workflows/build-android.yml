name: Build android

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [ "main" ]

env:
  JAVA_DISTRIBUTION: microsoft
  JAVA_VERSION: 21
  BUILD_NUMBER_OFFSET: 136
  
jobs:
  getVersion:
    name: get version
    runs-on: ubuntu-latest
    outputs:
      fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}
      majorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
  
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1
        
  buildAndroidAppBundle:
    name: build Android app-bundle ðŸ¤–
    runs-on: ubuntu-latest
    needs: getVersion
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Install flutter
        uses: subosito/flutter-action@v2.14.0
      
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - run: flutter doctor -v
      - run: flutter pub get
      
      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "file=upload-keystore.jks" >> key.properties
          echo "password=$KEYSTORE_PASSWORD" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        working-directory: android
        
      - name: Build appbundle
        run: flutter build appbundle --build-name ${{ needs.getVersion.outputs.fullSemVer }} --build-number $(expr ${{ github.run_number }} + ${{ env.BUILD_NUMBER_OFFSET }})
        
      - name: Stage artifact file
        run: mv build/app/outputs/bundle/release/app-release.aab ${{ vars.ANDROID_APP_BUNDLE_ARTIFACT_PATH }}
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ vars.ANDROID_ARTIFACT }}
          path: ${{ vars.ANDROID_APP_BUNDLE_ARTIFACT_PATH }}
          if-no-files-found: error
  
  buildAndroidApk:
    name: build Android apk ðŸ¤–
    runs-on: ubuntu-latest
    needs: getVersion
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Install flutter
        uses: subosito/flutter-action@v2.14.0

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      
      - run: flutter doctor -v
      - run: flutter pub get

      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "file=upload-keystore.jks" >> key.properties
          echo "password=$KEYSTORE_PASSWORD" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        working-directory: android
        
      - name: Build apk
        run: flutter build apk --build-name ${{ needs.getVersion.outputs.fullSemVer }} --build-number ${{ github.run_number }}
      
      - name: Stage artifact file
        run: mv build/app/outputs/flutter-apk/app-release.apk  ${{ vars.ANDROID_APK_ARTIFACT_PATH }}
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ vars.ANDROID_ARTIFACT }}
          path:  ${{ vars.ANDROID_APK_ARTIFACT_PATH }}
          if-no-files-found: error

  uploadToGooglePlay:
    name: upload to GooglePlay
    runs-on: ubuntu-latest
    needs: buildAndroidAppBundle
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: ${{ vars.ANDROID_ARTIFACT }}

      - name: Create service_account.json
        run: echo '${{ secrets.PLAY_STORE_CONFIG_JSON }}' > service_account.json

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJson: service_account.json
          packageName: com.wimvanlaer.qr_code_generator
          releaseFiles: qr_code_generator.aab
          status: completed
          track: alpha
