name: Build

on:
  push:
     branches: [ "main" ]


env:
  APP_ARTIFACT: app
  ANDROID_ARTIFACT: android
  LINUX_ARTIFACT: linux
  WINDOWS_ARTIFACT: windows
  WEB_ARTIFACT: web


jobs:
  getVersion:
    name: get version
    runs-on: ubuntu-latest
    outputs:
      fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}
      majorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
  
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        
  buildAndroid:
    name: build Android 🤖
    runs-on: ubuntu-latest
    needs: getVersion
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Install flutter
        uses: subosito/flutter-action@v2.8.0
      
      - run: flutter doctor -v
      - run: flutter pub get

      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "file=upload-keystore.jks" >> key.properties
          echo "password=$KEYSTORE_PASSWORD" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        working-directory: android
        
      - name: Build appbundle
        run: flutter build appbundle --build-name ${{ needs.getVersion.outputs.fullSemVer }} --build-number ${{ github.run_number }}
        
      - name: Build apk
        run: flutter build apk --build-name ${{ needs.getVersion.outputs.fullSemVer }} --build-number ${{ github.run_number }}
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.ANDROID_ATIFACT }}
          path: build/app/outputs
          if-no-files-found: error
  
  buildLinux:
    name: build Linux 🐧
    runs-on: ubuntu-latest
    needs: getVersion
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: "install build dependencies"
        run: | 
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
          
      - name: Install flutter
        uses: subosito/flutter-action@v2.8.0
      
      - run: flutter doctor -v
      - run: flutter pub get
      
      - name: Build linux
        run: flutter build linux ${{ needs.getVersion.outputs.fullSemVer }} --build-number ${{ github.run_number }}
        
      - name: Upload version file as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.LINUX_ARTIFACT }}
          path: build/linux/x64/release/bundle
          if-no-files-found: error
          
  buildWindows:
    name: build Windows 🪟
    runs-on: windows-latest
    needs: getVersion
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: Install flutter
        uses: subosito/flutter-action@v2.8.0
      
      - run: flutter doctor -v
      - run: flutter pub get
      
      - name: Build app
        run: flutter pub run msix:create --version ${{ needs.getVersion.outputs.fullSemVer }}.${{ github.run_number }}
            
      - name: Upload version file as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.WINDOWS_ARTIFACT }}
          path: build/windows/runner/Release
          if-no-files-found: error
           
  buildWeb:
    name: build web 🌐
    runs-on: ubuntu-latest
    needs: getVersion
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: Install flutter
        uses: subosito/flutter-action@v2.8.0
      
      - run: flutter doctor -v
      - run: flutter pub get
      
      - name: Build app
        run: flutter build web --version ${{ needs.getVersion.outputs.fullSemVer }}.${{ github.run_number }}

      - name: Upload version file as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.WEB_ARTIFACT }}
          path: build/web
          if-no-files-found: error
          
          
  uploadToGooglePlay:
    name: upload to GooglePlay
    runs-on: ubuntu-latest
    needs: buildAndroid
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: ${{ env.ANDROID_ARTIFACT }}
   
      - name: Create service_account.json
        run: echo '${{ secrets.PLAY_STORE_CONFIG_JSON }}' > service_account.json
        
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1.0.19
        with:
          serviceAccountJson: service_account.json
          packageName: com.wimvanlaer.qr_code_generator
          releaseFiles: bundle/release/app_release.aab
          status: completed
          track: internal
