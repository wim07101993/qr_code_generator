name: Build

on:
  push:
    branches: [ "main" ]


env:
  VERSION_ARTIFACT: version
  SEMVER_ARTIFACT_FILE: full_sem_ver.txt
  MAJOR_MINOR_PATCH_ARTIFACT_FILE: major_minor_patch.txt
  APP_ARTIFACT: app
  AAB_ARTIFACT_FILE: qr_code_generator-android.aab
  APK_ARTIFACT_FILE: qr_code_generator-android.apk
  TARBAL_ARTIFACT_FILE: qr_code_generator-linux.tar.gz
  MSIX_ARTIFACT_FILE: qr_code_generator-windows.msix
  WEB_ARTIFACT_FILE: qr_code_generator-web.zip


jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
  
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        
      - name: Create semantic version file
        run: echo ${{ steps.gitversion.outputs.fullSemVer }} > ./version.txt
      - name: remove new-line from file
        run: tr -d '\n' < version.txt > ${{ env.SEMVER_ARTIFACT_FILE }}
        
      - name: Create major minor patch version file
        run: echo ${{ steps.gitversion.outputs.majorMinorPatch }} > ./version.txt
      - name: remove new-line from file
        run: tr -d '\n' < version.txt > ${{ env.MAJOR_MINOR_PATCH_ARTIFACT_FILE }}
        
      - name: Upload version file as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.VERSION_ARTIFACT }}
          path: ${{ env.SEMVER_ARTIFACT_FILE }}
          if-no-files-found: error
      - name: Upload version file as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.VERSION_ARTIFACT }}
          path: ${{ env.MAJOR_MINOR_PATCH_ARTIFACT_FILE }}
          if-no-files-found: error
  
  build-android-aab:
    runs-on: ubuntu-latest
    needs: get-version
    if: ${{ false }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Get version
        uses: actions/download-artifact@v3.0.2
        with:
          name:  ${{ env.VERSION_ARTIFACT }}
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: ${{ env.SEMVER_ARTIFACT_FILE }}
  
      - name: Install flutter
        uses: subosito/flutter-action@v2.8.0
      
      - run: flutter doctor -v
      - run: flutter pub get

      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "file=upload-keystore.jks" >> key.properties
          echo "password=$KEYSTORE_PASSWORD" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        working-directory: android
        
      - name: Build app
        run: flutter build appbundle --build-name ${{ steps.version.outputs.content }} --build-number ${{ github.run_number }}
      
      - name: Rename artifact file
        run: mv build/app/outputs/bundle/release/app-release.aab ${{ env.AAB_ARTIFACT_FILE }}
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.APP_ARTIFACT }}
          path: ${{ env.AAB_ARTIFACT_FILE }}
          if-no-files-found: error
  
  build-android-apk:
    runs-on: ubuntu-latest
    needs: get-version
    if: ${{ false }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Get version
        uses: actions/download-artifact@v3.0.2
        with:
          name:  ${{ env.VERSION_ARTIFACT }}
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: ${{ env.SEMVER_ARTIFACT_FILE }}
  
      - name: Install flutter
        uses: subosito/flutter-action@v2.8.0
      
      - run: flutter doctor -v
      - run: flutter pub get

      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "file=upload-keystore.jks" >> key.properties
          echo "password=$KEYSTORE_PASSWORD" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
        working-directory: android
        
      - name: Build app
        run: flutter build apk --build-name ${{ steps.version.outputs.content }} --build-number ${{ github.run_number }}
      
      - name: Rename artifact file
        run: mv build/app/outputs/flutter-apk/app-release.apk ${{ env.APK_ARTIFACT_FILE }}
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.APP_ARTIFACT }}
          path: ${{ env.APK_ARTIFACT_FILE }}
          if-no-files-found: error
          
  build-linux:
    runs-on: ubuntu-latest
    needs: get-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Get version
        uses: actions/download-artifact@v3.0.2
        with:
          name: ${{ env.VERSION_ARTIFACT }}
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: ${{ env.SEMVER_ARTIFACT_FILE }}
          
      - name: "install build dependencies"
        run: | 
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
          
      - name: Install flutter
        uses: subosito/flutter-action@v2.8.0
      
      - run: flutter doctor -v
      - run: flutter pub get
      
      - name: Build app
        run: flutter build linux --build-name ${{ steps.version.outputs.content }} --build-number ${{ github.run_number }}
        
      - name: Creat tarball
        uses: thedoctor0/zip-release@0.7.0
        with:
          type: 'tar'
          directory: build/linux/x64/release
          path: bundle
          filename: ${{ env.TARBAL_ARTIFACT_FILE }}
        
      - name: Upload version file as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.APP_ARTIFACT }}
          path: build/linux/x64/release/${{ env.TARBAL_ARTIFACT_FILE }} 
          if-no-files-found: error
          
  build-windows:
    runs-on: windows-latest
    needs: get-version
    if: ${{ false }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Get version
        uses: actions/download-artifact@v3.0.2
        with:
          name:  ${{ env.VERSION_ARTIFACT }}
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: ${{ env.MAJOR_MINOR_PATCH_ARTIFACT_FILE }}
          
      - name: Install flutter
        uses: subosito/flutter-action@v2.8.0
      
      - run: flutter doctor -v
      - run: flutter pub get
      
      - name: Build app
        run: flutter pub run msix:create --version ${{ steps.version.outputs.content }}.${{ github.run_number }}
            
      - name: Rename artifact file
        run: mv build/windows/runner/Release/qr_code_generator.msix ${{ env.MSIX_ARTIFACT_FILE }}
         
      - name: Upload version file as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.APP_ARTIFACT }}
          path: ${{ env.MSIX_ARTIFACT_FILE }}
          if-no-files-found: error
           
  build-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: Install flutter
        uses: subosito/flutter-action@v2.8.0
      
      - run: flutter doctor -v
      - run: flutter pub get
      
      - name: Build app
        run: flutter build web
        
      - name: Zip output
        uses: thedoctor0/zip-release@0.7.0
        with:
          type: 'zip'
          directory: build/web
          filename: ${{ env.WEB_ARTIFACT_FILE }}
        
      - name: Upload version file as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.APP_ARTIFACT }}
          path: build/web/${{ env.WEB_ARTIFACT_FILE }}
          if-no-files-found: error
          
          
  release-to-google-play:
    runs-on: ubuntu-latest
    needs: build-android-aab
    if: ${{ false }}
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: app
   
      - name: Create service_account.json
        run: echo '${{ secrets.PLAY_STORE_CONFIG_JSON }}' > service_account.json
        
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1.0.19
        with:
          serviceAccountJson: service_account.json
          packageName: com.wimvanlaer.qr_code_generator
          releaseFiles: ${{ env.AAB_ARTIFACT_FILE }}
          status: completed
          track: internal
